// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9 (swiftlang-5.9.0.128.108 clang-1500.0.40.1)
// swift-module-flags: -target arm64-apple-ios12.2 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -module-name screenshot_prevention
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Flutter
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_exported import screenshot_prevention
@objc @_inheritsConvenienceInitializers public class SwiftScreenshotPreventionPlugin : ObjectiveC.NSObject, Flutter.FlutterPlugin, Flutter.FlutterStreamHandler {
  @objc public func onListen(withArguments arguments: Any?, eventSink events: @escaping Flutter.FlutterEventSink) -> Flutter.FlutterError?
  @objc public func onCancel(withArguments arguments: Any?) -> Flutter.FlutterError?
  @objc public static func register(with registrar: any Flutter.FlutterPluginRegistrar)
  @objc public func handle(_ call: Flutter.FlutterMethodCall, result: @escaping Flutter.FlutterResult)
  @objc override dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class ProtectedImageViewFactory : ObjectiveC.NSObject, Flutter.FlutterPlatformViewFactory {
  @objc public func create(withFrame frame: CoreFoundation.CGRect, viewIdentifier viewId: Swift.Int64, arguments args: Any?) -> any Flutter.FlutterPlatformView
  @objc public func createArgsCodec() -> any Flutter.FlutterMessageCodec & ObjectiveC.NSObjectProtocol
  @objc override dynamic public init()
  @objc deinit
}
@objc @_hasMissingDesignatedInitializers public class ProtectedImageView : ObjectiveC.NSObject, Flutter.FlutterPlatformView {
  @objc public func view() -> UIKit.UIView
  @objc deinit
}
public protocol ScreenRecordDelegate {
  func screen(_ screen: UIKit.UIScreen, didRecordStarted isRecording: Swift.Bool)
  func screen(_ screen: UIKit.UIScreen, didRecordEnded isRecording: Swift.Bool)
}
@_hasMissingDesignatedInitializers public class ScreenGuardManager {
  public static let shared: screenshot_prevention.ScreenGuardManager
  public var screenRecordDelegate: (any screenshot_prevention.ScreenRecordDelegate)?
  public func guardScreenshot(for window: UIKit.UIWindow)
  public func guardScreenshot(for view: UIKit.UIView)
  public func disableScreenshotProtection(for window: UIKit.UIWindow)
  public func disableScreenshotProtection(for view: UIKit.UIView)
  public func listenForScreenRecord()
  @objc deinit
}
